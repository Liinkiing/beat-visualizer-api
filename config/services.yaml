# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    env(SPOTIFY_CLIENT_ID): ~
    env(SPOTIFY_CLIENT_SECRET): ~
    env(SPOTIFY_REDIRECT_URI): ~
    env(SPOTIFY_CLIENT_HOST): ~
    env(SPOTIFY_DEV_ACCESS_TOKEN): ~

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            string $appEnv: '%env(string:APP_ENV)%'
            $devAccessToken: '%env(string:SPOTIFY_DEV_ACCESS_TOKEN)%'


    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Controller\SpotifyController:
        $clientRedirectUrl: '%env(string:SPOTIFY_CLIENT_HOST)%'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Client\SpotifyClient:
        $clientId: '%env(string:SPOTIFY_CLIENT_ID)%'
        $clientSecret: '%env(string:SPOTIFY_CLIENT_SECRET)%'
        $redirectUri: '%env(string:SPOTIFY_REDIRECT_URI)%'

    App\EventListener\SpotifyUserInitialization:
        tags:
            - { name: kernel.event_listener, event: graphql.pre_executor, method: onPreExecutor }
